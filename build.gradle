/*
 * Copyright 2016 Peter Kenji Yamanaka
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {

  repositories {
    mavenCentral()
  }

  dependencies {
    classpath "com.jakewharton:butterknife-gradle-plugin:$butterknife"
  }
}

tasks.whenTaskAdded { task ->
  if (task.name.startsWith("lint")) {
    task.enabled = false
  }
}

apply plugin: "com.android.library"
apply plugin: "com.github.ben-manes.versions"
apply plugin: "com.getkeepsafe.dexcount"
apply plugin: "com.jakewharton.butterknife"
apply plugin: "net.ltgt.errorprone"
apply plugin: "me.tatarka.retrolambda"

android {
  compileSdkVersion 24
  buildToolsVersion "$buildTools"

  defaultConfig {
    minSdkVersion 16
    targetSdkVersion 24
    versionCode 77
    versionName "4.5.0"
    // For vector drawables
    vectorDrawables.useSupportLibrary = true

    // For instrumentation test
    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    // Consumer proguard file
    consumerProguardFiles "proguard-rules.pro"

    // Fix a library publish error
    publishNonDefault true

    // Include the library in modules with the following
    //    debugCompile project(path: ":PYDroid", configuration: "debug")
    //    releaseCompile project(path: ":PYDroid", configuration: "release")
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  buildTypes {
    release {
      minifyEnabled false
      shrinkResources false
      proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
    }
  }

  dexOptions {
    javaMaxHeapSize "$heapSize"
  }
}

retrolambda {
  jvmArgs "-noverify"
}

dependencies {
  compile fileTree(include: ["*.jar"], dir: "libs")

  retrolambdaConfig "net.orfjackal.retrolambda:retrolambda:2.3.0"

  // Error-Prone compiler
  errorprone "com.google.errorprone:error_prone_core:$errorProne"

  // Leak Canary
  debugCompile "com.squareup.leakcanary:leakcanary-android:$leakCanary"
  releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanary"
  testCompile "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanary"

  // Android support library.
  compile "com.android.support:support-annotations:$supportLib"
  compile "com.android.support:preference-v14:$supportLib"
  compile "com.android.support:design:$supportLib"
  compile "com.android.support:support-vector-drawable:$supportLib"
  compile "com.android.support:cardview-v7:$supportLib"

  // Tap Target View
  compile "com.getkeepsafe.taptargetview:taptargetview:$tapTargetView"

  // Google Billing
  compile "org.solovyev.android:checkout:$inAppBilling@aar"

  // Timber logging
  compile "com.jakewharton.timber:timber:$timber"

  // FastAdapter
  compile("com.mikepenz:fastadapter:$fastAdapter@aar") {
    transitive = true
  }

  // Butterknife
  compile "com.jakewharton:butterknife:$butterknife"
  annotationProcessor "com.jakewharton:butterknife-compiler:$butterknife"

  // Auto value
  provided "com.google.auto.value:auto-value:$autoValue"
  annotationProcessor "com.google.auto.value:auto-value:$autoValue"
  annotationProcessor "com.ryanharter.auto.value:auto-value-gson:$autoValueGSON"

  // Retrofit
  compile "com.squareup.retrofit2:retrofit:$retrofit"
  compile "com.squareup.retrofit2:converter-gson:$retrofit"
  compile "com.squareup.okhttp3:logging-interceptor:$retrofitLogging"

  // Android Framework Testing
  androidTestCompile "com.android.support:support-annotations:$supportLib"
  androidTestCompile "com.android.support.test:runner:$androidTestRunner"
  androidTestCompile "com.android.support.test:rules:$androidTestRules"
  androidTestCompile "com.android.support.test.espresso:espresso-core:$espresso"

  // Roboelectric for Android on JVM
  testCompile "org.robolectric:robolectric:$robolectric"

  // Some resources (FAB) need GL
  testCompile "org.khronos:opengl-api:$openGl"

  // JUnit for unit tests
  testCompile "junit:junit:$junit"

  // Mockito for unit tests
  testCompile "org.mockito:mockito-core:$mockito"
}
