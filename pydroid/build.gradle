/*
 * Copyright 2017 Peter Kenji Yamanaka
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: "com.github.ben-manes.versions"
apply plugin: "com.getkeepsafe.dexcount"
apply plugin: "net.ltgt.errorprone"
apply plugin: "me.tatarka.retrolambda"
apply plugin: 'com.github.dcendents.android-maven'

android {
  compileSdkVersion rootProject.ext.maxSdk
  buildToolsVersion "$buildTools"

  //noinspection GroovyMissingReturnStatement
  defaultConfig {
    minSdkVersion rootProject.ext.minSdk
    targetSdkVersion rootProject.ext.maxSdk

    // For vector drawables
    vectorDrawables.useSupportLibrary = true

    // Consumer proguard file
    consumerProguardFiles "proguard-rules.pro"

    // Only English, I don't have any translations
    resConfigs "en"
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  buildTypes {
    debug {
      minifyEnabled false
      shrinkResources false
    }

    release {
      minifyEnabled false
      shrinkResources false
      proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
    }
  }

  dexOptions {
    javaMaxHeapSize "${rootProject.ext.heapSize}"
  }
}

dependencies {
  compile fileTree(include: ["*.jar"], dir: "libs")

  retrolambdaConfig "net.orfjackal.retrolambda:retrolambda:${rootProject.ext.retrolambda}"

  // Android support library.
  compile "com.android.support:appcompat-v7:$supportLib"

  // Timber logging
  compile "com.jakewharton.timber:timber:$timber"

  // Auto value
  provided "com.google.auto.value:auto-value:$autoValue"
  provided "com.ryanharter.auto.value:auto-value-gson:$autoValueGSON"
  kapt "com.google.auto.value:auto-value:$autoValue"
  kapt "com.ryanharter.auto.value:auto-value-gson:$autoValueGSON"

  // RxJava
  compile "io.reactivex.rxjava2:rxjava:$rxjava"
  compile "io.reactivex.rxjava2:rxandroid:$rxandroid"

  // Retrofit
  compile "com.squareup.retrofit2:retrofit:$retrofit"
  compile "com.squareup.retrofit2:converter-gson:$retrofit"
  compile "com.squareup.retrofit2:adapter-rxjava2:$retrofit"
  compile "com.squareup.okhttp3:logging-interceptor:$retrofitLogging"
  compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
}

